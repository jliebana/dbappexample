DBExampleApp
------------

En este documento se detallan los cambios producidos en el proyecto (de más antiguo a más reciente):

1.-Creación del proyecto Android y conexión utilizando OAuth a Dropbox:
-----------------------------------------------------------------------

-En este primer paso se ha creado el proyecto Android con Eclipse. 
-Consultando la documentación disponible en la página de desarrollo de Dropbox para Android ( https://www.dropbox.com/developers/core/start/android ) se ha procedido descargar las librerías necesarias, así como configurar el proyecto para hacer uso de esta API.
-Se ha desarrollado la autenticación siguiendo el modelo OAuth propuesto en la documentación oficial,y se ha estudiado el código de prueba disponible en el SDK de Dropbox con el fin de seguir las mejores prácticas.
-La aplicación es capaz de llamar a la aplicación Dropbox o a la web para solicitar el acceso a la cuenta del usuario, mostrando un mensaje en caso de conseguirlo.
-Esta autentificación es almacenada en las preferencias para no tener que molestar al usuario solicitando permisos cada vez que se abre la aplicación.
-Para poder autenticarse, se ha creado una aplicación en dropbox a través de: https://www.dropbox.com/developers/apps/


2.- Añadida descarga de metadatos de los ficheros en Dropbox y pantalla mostrando la lista de elementos:
--------------------------------------------------------------------------------------------------------

-Se ha creado una lista que contendrá cada una de las entradas de los ficheros en dropbox. Estas entradas se basan en la clase Entry de la API de Dropbox. Se ha decidido reutilizar esta clase en lugar de implementar una nueva por ser sencilla y contener la información deseada (nombre, path y fecha del fichero). Para un caso real sería mejor crear una clase independiente de la API.
-Esta lista contiene los metadatos del fichero, lo que permite acceder a la información de cada uno de ellos sin la necesidad de descargar todos los ficheros.
-Para construir esta lista se van revisando todos los directorios de Dropbox, y añadiendo a esta lista aquellos ficheros cuya extensión coincida con la deseada: ".epub".
-Una vez construida, esta lista se muestra por pantalla, utilizando un icono (por el momento una imagen cualquiera) junto con el nombre del fichero.
-Se ha decidido seguir utilizando la misma Activity que la implementada en la autenticación, ya que de momento ambas tareas ocurren de manera secuencial.

3.- Añadida ordenación de la lista
-----------------------------------
-Se ha cambiado la vista de la lista, en lugar de una cuadricula se utiliza una lista para poder mostrar facilmente la fecha de creación así como el nombre del fichero.
-Se ha añadido el método quicksort para ordenar arrays. Se ha realizado una implementación genérica para poder ordenar cualquier clase que implemente la interfaz "Comparable", por lo que se puede usar el mismo método para fechas como para strings. De momento la ordenación es de menor a mayor.
-Se han añadido los botones en el menú para realizar esta ordenación.

4.-Doble click abre la portada del libro.
-----------------------------------------
-El primer paso ha sido crear un nuevo activity que muestre una imagen cuando el usuario haga doble click en un elemento de la lista. En un primer paso hasta tener la portada del libro, se muestra una imagen genérica.
-Como de la nueva activity se vuelve a la activity anterior, para evitar estar descargando los mismos elementos continuamente, se evita que la lista se actualice si esta ya tenía elementos. Esto debería de ser tratado de mejor manera en una aplicación real para que los datos entre dropbox y nuestra aplicación estuvieran sincronizados. Por simplificar la aplicación, esto no se implementa de momento.

-Por otra parte, para poder detectar eventos de "doble click" en los iconos necesitamos que cada imagen tenga asociada un GestureListener, por lo que se crea una ImageView personalizada que incluya este Listener.
-Además, este imageview llevará asociado el índice del elemento al que se está haciendo click, para poder mandar a la activity que muestra la imagen, la información del epub correspondiente (ya que posteriormente se mostrará la portada de dicho epub)
